Cadastro

Crie uma URL para o cadastro de usuários:

```jsx
from django.urls import path
from . import views

urlpatterns = [
    path('cadastro/', views.cadastro, name='cadastro'),
]
```

Agora crie a view cadastro para exibir a interface de cadastro:

```python
def cadastro(request):
    if request.method == "GET":
        return render(request, 'cadastro.html')
```

Configure onde o Django irá procurar por HTML:

```python
import os

os.path.join(BASE_DIR, 'templates')
```

Crie um HTML base em templates/bases/base.html:

```python
{% load static %}
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>{% block 'title' %}{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    {% block 'head' %}{% endblock %}
  
  </head>
  <body>
    {% block 'body' %}{% endblock %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
```

Crie o cadastro.html

```python
{% extends 'bases/base.html' %}
{% load static %}
{% block 'head' %}
    
{% endblock %}

{% block 'body' %}

    <div class="container-fluid bg-inscricao">
        
        <div class="row">
            <div class="col-md">
                <h3 class="logo">Type.Event</h3>

                

                <img src="{% static 'geral/img/logo_evento.png' %}" class="logo-evento">

            </div>

            <div class="col-md bg-img">
            
            </div>
        
        </div>
    </div>

{% endblock %}
```

Configure os arquivos estáticos:

```python
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'templates/static'),)
STATIC_ROOT = os.path.join('static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
```

Crie o base.css em geral/css/base.css:

```python
body{
    color: white !important;
}

:root{
     
    --main-color: #201F1F;
    --dark-color: #1C1A1A;
    --contrast-color: #BE375F;
    --differential-color: #ED8554;

}
```

Importe o CSS base:

```python
<link href="{% static 'geral/css/base.css' %}" rel="stylesheet">
```

Crie o usuarios.css:

```python
.bg-inscricao{

    height: 100vh;
    background-color: var(--dark-color);
    padding-left: 1%;
}

.bg-img{
    background-image: url('/static/usuarios/img/bg.png');
    height: 100vh;
    background-size: cover;
    color: #14e9e9
}

.logo{
    font-family: Arial, Helvetica, sans-serif;
    margin-top: 40px;
}

.box-form{
    width: 70%;
    background-color: var(--main-color);
    margin: auto;
    padding: 40px;
    margin-top: 4%;
    border-radius: 20px;
    box-shadow: 1px 1px 5px 1px #0e0e0e;
    height: 65vh;
}

.link{
    color: var(--differential-color);
    text-decoration: none;
}

.btn-principal{
    
    background-color: transparent;
    border: 1px solid var(--contrast-color);
    color: white;
    padding: 10px;
    border-radius: 10px;
    font-weight: bold;
}

.logo-evento{

    position: fixed;
    bottom: 20px;

}
```

importe o CSS em cadastro:

```python
<link href="{% static 'usuarios/css/usuarios.css' %}" rel="stylesheet">
```

Adicione a logo do evento!

Adicione a imagem de fundo!

Crie o partial para o formulário de cadastro em templates/partials/usuarios/cadastro.html:

```python
<div class="box-form">
    <h3>CADASTRO</h3>
    <hr style="border-color: #7E7B7C">

    <form action="#" method="POST">
        <label>Username:</label> 
        <input type="text" class="form-control" placeholder="Username..." name="username">
        <br>
        <label>E-mail:</label>
        <input type="email" class="form-control" placeholder="E-mail..." name="email">
        <br>
        <div class="row">
            <div class="col-md">
                <label>Senha:</label>
                <input type="password" class="form-control" placeholder="Senha..." name="senha">
            </div>

            <div class="col-md">
                <label>Confirmar senha:</label>
                <input type="password" class="form-control" placeholder="Confirmar senha..." name="confirmar_senha">
            </div>
        </div>
        <a href="#" class="link">Já possuo uma conta</a>
        <br>
        <br>
        <input type="submit" value="CADASTRAR" class="btn-principal">
    </form>
</div>
```

Inclua o arquivo o partial de cadastro no HTML principal:

```python
{% include "partials/usuarios/cadastro.html" %}
```

Envie os dados do formulário para URL:

```python
<form action="{% url 'cadastro' %}" method="POST"> {% csrf_token %}
```

Execute as migrações

Adicione o cadastro de usuários na view cadastro:

```python
from django.shortcuts import render, redirect
from django.urls import reverse
from django.contrib.auth.models import User

def cadastro(request):
    if request.method == "GET":
        return render(request, 'cadastro.html')
    elif request.method == "POST":
        username = request.POST.get('username')
        email = request.POST.get('email')
        senha = request.POST.get('senha')
        confirmar_senha = request.POST.get('confirmar_senha')

        if not (senha == confirmar_senha):    
            return redirect(reverse('cadastro'))
        
        user = User.objects.filter(username=username)

        if user.exists():
            return redirect(reverse('cadastro'))   
        
        user = User.objects.create_user(username=username, email=email, password=senha)
        user.save()
        return redirect(reverse('login'))
```

Configure as mensagens:

```python
from django.contrib.messages import constants
MESSAGE_TAGS = {
    constants.DEBUG: 'alert-primary',
    constants.ERROR: 'alert-danger',
    constants.WARNING: 'alert-warning',
    constants.SUCCESS: 'alert-success',
    constants.INFO: 'alert-info ',
}
```

Adicione as mensagens na view cadastro:

```python
from django.contrib import messages
from django.contrib.messages import constants

messages.add_message(request, constants.ERROR, 'Mensagem')
```

Exiba as mensagens no HTML:

```python
{% if messages %}
    {% for message in messages %}
        <div class="alert {{ message.tags }}">{{ message }}</div>
    {% endfor %}
{% endif %}
```